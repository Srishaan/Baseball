# Results

```{r barplot, fig.align='center', fig.cap="Percentage of Players by Round and School Level", warning=FALSE, error = TRUE}
#| message: false
library(tidyverse)
library(data.table)

draft_info <- fread('clean_draft.csv')
draft_info <- 
  draft_info %>% 
  mutate(mlb_years = ifelse(mlb_played_first == 0 & mlb_played_last == 0, 0,
                            (mlb_played_last - mlb_played_first) + 1 ) )

# Create a dataframe with state naming data
state_data <- data.frame(names = state.name, abbreviation = tolower(state.abb))

draft_info <- 
  draft_info  
  left_join(state_data, by = c("home_state" = "abbreviation")) |>
  select(-home_state) |>
  rename(home_state = names) |> 
  drop_na(home_state)

players_per_round <- 
  draft_info |> 
  filter(as.integer(pick_round) %in% c(1:10)) |> 
  drop_na(high_school) |> 
  group_by(pick_round) |> 
  summarise(drafted_players = n()) |> 
  ungroup() |> 
  mutate(pick_round = factor(pick_round, levels = c(1:10))) |> 
  arrange(pick_round)

# Subset the data to only players drafted in the first 10 rounds
first_10 <- 
  draft_info |> 
  filter(as.integer(pick_round) %in% c(1:10)) |> 
  drop_na(high_school) |> 
  group_by(pick_round, high_school) |> 
  summarise(num_players = n()) |> 
  arrange(desc(num_players)) |> 
  ungroup() |> 
  inner_join(players_per_round, by = "pick_round") |> 
  mutate(pick_round = factor(pick_round, levels = c(1:10)),
         high_school = as.factor(ifelse(high_school == "Yes", "High School", 
                                        "College") ),
         percent = round(num_players / drafted_players * 100, 2)  )|> 
  arrange(pick_round)

hs_by_round_plot <-
  ggplot(first_10, aes(x = pick_round, y = percent, fill = high_school)) +
  geom_bar(stat = "identity", position = "stack") +
  labs(y = "Percent of Draftees", x = "Draft Round", 
       title = "Percent of Draftees by Pick and Round",
       fill = "School Level") +
  theme_minimal() +
  geom_text(aes(label = paste(percent, "%", sep = "")), 
                position = position_stack(vjust = 0.5), size = 4) +
  theme(plot.title = element_text(size = 12, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        axis.text = element_text(size = 10),
        legend.title = element_text(size = 10, face = "bold"),
        legend.text = element_text(size = 10))
hs_by_round_plot
```

```{r histograms, fig.cap = "Histograms of Years before First MLB Game"}
library(gridExtra)

bat_draft_df <- fread('bat_subset.csv')
pitch_draft_df <- fread('pitch_subset.csv')

#Created a new variable for each dataset that gives the number of years it took for a player 
#to play their first MLB game
bat_draft_df$DifferenceYearsDraftFGPlayed <- bat_draft_df$mlb_played_first - bat_draft_df$year
pitch_draft_df$DifferenceYearsDraftFGPlayed <- pitch_draft_df$mlb_played_first - pitch_draft_df$year
plot1 <- ggplot(bat_draft_df, aes(x = DifferenceYearsDraftFGPlayed)) +
  geom_histogram(binwidth = 0.5, fill = "skyblue", color = "black", alpha = 0.8) +
  labs(title = "Years for Batting Draftee to Play First MLB Game", 
       x = "# of Years", y = "Frequency") +
  theme_minimal() +
  theme(plot.title = element_text(size = 12, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        axis.text = element_text(size = 10),
        legend.title = element_text(size = 10, face = "bold"),
        legend.text = element_text(size = 10))

plot2 <- ggplot(pitch_draft_df, aes(x = DifferenceYearsDraftFGPlayed)) +
  geom_histogram(binwidth = 0.5, fill = "orange", color = "black", alpha = 0.8) +
  labs(title = "Years for Pitching Draftee to Play First MLB Game", 
       x = "# of Years", y = "Frequency") + 
  theme_minimal() +
  theme(plot.title = element_text(size = 12, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        axis.text = element_text(size = 10),
        legend.title = element_text(size = 10, face = "bold"),
        legend.text = element_text(size = 10))
grid.arrange(plot1, plot2, nrow = 1)
```

```{r scatterplots, fig.cap = "Scatterplots of Mean vs. Weight", warning=FALSE}
plot1 <- ggplot(bat_draft_df, aes(x = person_weight, y=person_height)) +
  geom_point(fill="skyblue", shape=21, size=2, alpha = 0.8) +
  geom_hline(yintercept = mean(bat_draft_df$person_height,na.rm=T), 
             color = "red", linetype = "dashed", alpha = 0.8) + 
  geom_vline(xintercept = mean(bat_draft_df$person_weight,na.rm=T), 
             color = "blue", linetype = "dashed", alpha = 0.8) +
  geom_text(aes(x = mean(bat_draft_df$person_weight,na.rm=T) + 1, 
                y = mean(bat_draft_df$person_height,na.rm=T), 
                label = paste("Mean Weight")), 
            color = "blue", hjust = 0, vjust = -15, alpha = 0.8) +  
  geom_text(aes(x = mean(bat_draft_df$person_weight,na.rm=T), 
                y = mean(bat_draft_df$person_height,na.rm=T) - 1, 
                label = paste("Mean Height")), 
            color = "red", hjust = -3, vjust = 0, alpha = 0.8) +  
  geom_smooth(method = "lm", se = FALSE, color = "black", alpha = 0.8) +
  labs(title = "Weight vs. Height (Batters)", 
       x = "Draftee Weight", y = "Draftee Height") +
  theme_minimal() +
  theme(plot.title = element_text(size = 12, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        axis.text = element_text(size = 10),
        legend.title = element_text(size = 10, face = "bold"),
        legend.text = element_text(size = 10))

plot2 <- ggplot(pitch_draft_df, aes(x = person_weight, y=person_height)) +
  geom_point(fill="orange", shape=21, size=2, alpha = 0.8) +
  geom_hline(yintercept = mean(pitch_draft_df$person_height,na.rm=T), 
             color = "red", linetype = "dashed", alpha = 0.8) + 
  geom_vline(xintercept = mean(pitch_draft_df$person_weight,na.rm=T), 
             color = "blue", linetype = "dashed", alpha = 0.8) +
  geom_text(aes(x = mean(pitch_draft_df$person_weight,na.rm=T) + 1, 
                y = mean(pitch_draft_df$person_height,na.rm=T), 
                label = paste("Mean Weight")), 
            color = "blue", hjust = 0, vjust = -16, alpha = 0.8) +  
  geom_text(aes(x = mean(pitch_draft_df$person_weight,na.rm=T), 
                y = mean(pitch_draft_df$person_height,na.rm=T) - 1, 
                label = paste("Mean Height")), 
            color = "red", hjust = -2.8, vjust = 0, alpha = 0.8) +  
  geom_smooth(method = "lm", se = FALSE, color = "black", alpha = 0.8) +
  labs(title = "Weight vs. Height (Pitchers)", 
       x = "Draftee Weight", y = "Draftee Height") +
  theme_minimal() +
  theme(plot.title = element_text(size = 12, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        axis.text = element_text(size = 10),
        legend.title = element_text(size = 10, face = "bold"),
        legend.text = element_text(size = 10))

grid.arrange(plot1, plot2, nrow = 1)
```


```{r correlation,fig.align='center', fig.cap = "Correlation Plots for Pitching and Batting", fig.height=3.5, warning=FALSE}
library(corrplot)

par(mfrow=c(1,2))
# >| full_join(pitch_draft_df)
bat_draft_df1 <- bat_draft_df %>%
  mutate(pick_round=as.numeric(pick_round)) %>% 
  drop_na()
correlation_matrix <- cor(bat_draft_df1[, c(4,5,7,9,10)]) 
corrplot(correlation_matrix, method = "color")
title("Correlation Plot (Batting)",line = 3,adj=0)
#title(sub = "Plot 5: Correlation Plot of Batters", line=4.5)

pitch_draft_df1 <- pitch_draft_df %>%
  mutate(pick_round=as.numeric(pick_round)) %>% 
  drop_na()
correlation_matrix <- cor(pitch_draft_df1[, c(4,5,7,9,10)]) 
corrplot(correlation_matrix, method = "color")
title("Correlation Plot (Pitching)",line = 3,adj=0)
#title(sub = "Plot 6: Correlation Plot of Pitchers", line=4.5)
```